name: Movie Web CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  DOCKER_IMAGE_BACKEND: ${{ secrets.DOCKER_HUB_USER }}/filmfinder-app-backend:latest
  DOCKER_IMAGE_FRONTEND: ${{ secrets.DOCKER_HUB_USER }}/filmfinder-app-frontend:latest
  DOCKER_COMPOSE_LOCATION: /home/ubuntu/full-stack

jobs:
  build-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and Push Backend Docker image
        run: |
          cd backend
          docker build -t ${{ env.DOCKER_IMAGE_BACKEND }} -f Dockerfile .
          docker push ${{ env.DOCKER_IMAGE_BACKEND }}

      - name: Check build directory
        run: |
          cd backend
          ls -al build/libs/

  build-frontend:
    runs-on: ubuntu-latest
    needs: build-backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and Push Frontend Docker image
        run: |
          cd frontend
          docker build -t ${{ env.DOCKER_IMAGE_FRONTEND }} -f Dockerfile .
          docker push ${{ env.DOCKER_IMAGE_FRONTEND }}

      - name: Check build directory
        run: |
          cd backend
          ls -al build/libs/

  deploy:
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]

    steps:
      - name: SSH to EC2 and deploy
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER_NAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          script: |
            echo "Logging in to DockerHub..."
            echo ${{ secrets.DOCKER_HUB_TOKEN }} | docker login -u ${{ secrets.DOCKER_HUB_USER }} --password-stdin
            cd ${{ env.DOCKER_COMPOSE_LOCATION }}

            echo "Stopping and removing old containers..."
            sudo docker-compose down --rmi all

            echo "Pulling Docker images..."
            sudo docker pull ${{ env.DOCKER_IMAGE_BACKEND }}
            sudo docker pull ${{ env.DOCKER_IMAGE_FRONTEND }}

            echo "Starting new containers..."
            sudo docker-compose up -d
