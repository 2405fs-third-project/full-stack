name: Movie Web CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          
      - name: Give execution rights on gradlew
        run: chmod +x backend/gradlew
        
      - name: Build with Gradle
        run: |
         cd backend
         ./gradlew build

      - name: Check build directory
        run: |
          cd backend
          ls -al build/libs/

      - name: Build Docker image for Backend
        run: |
          cd backend
          docker build -t ${{ secrets.DOCKER_HUB_USER }}/didacto-app-dev-backend .

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Push Backend Docker image
        run: |
          docker push ${{ secrets.DOCKER_HUB_USER }}/didacto-app-dev-backend

  build-frontend:
    runs-on: ubuntu-latest
    needs: build-backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and Push Frontend Docker image
        run: |
          cd frontend
          docker build -t ${{ secrets.DOCKER_HUB_USER }}/didacto-app-dev-frontend -f Dockerfile .
          docker push ${{ secrets.DOCKER_HUB_USER }}/didacto-app-dev-frontend

  deploy:
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]
    steps:
      - name: SSH to EC2 and deploy
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER_NAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          script: |
            cd ${{ secrets.SERVER_DIRECTORY_LOCATION }} || exit 1
            echo "Pulling Docker images..."
            sudo docker-compose pull backend frontend
            echo "Stopping and removing old containers..."
            sudo docker-compose down
            echo "Starting new containers..."
            sudo docker-compose up -d
